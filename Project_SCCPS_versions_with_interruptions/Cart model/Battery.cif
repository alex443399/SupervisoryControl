import "Cart brain.cif", "DC motor.cif";

group def Battery(Cart_brain brain; DC_motor motor):
    alg bool guard_discharge = battery_charging.not_charging and motor.emergency_breaks.ebreaks_off and not(motor.keep_track_of_direction.idle);

    alg bool high_or_full = battery_level.battery_high or battery_level.battery_full;

    plant invariant not(battery_charging.is_charging) or brain.current_location.charging;

    plant battery_charging:
        location not_charging: initial; marked;
            edge brain.start_charging goto is_charging;
            edge brain.replace_battery;
        location is_charging:
            edge brain.stop_charging goto not_charging;
    end

    plant battery_level:
        location battery_empty:
            edge brain.charge when battery_charging.is_charging goto battery_critical;
            edge brain.replace_battery goto battery_full;

        location battery_critical:
            edge brain.charge when battery_charging.is_charging goto battery_low;
            edge brain.discharge when guard_discharge goto battery_empty;
            edge brain.replace_battery goto battery_full;

        location battery_low:
            edge brain.charge when battery_charging.is_charging goto battery_high;
            edge brain.discharge when guard_discharge goto battery_critical;
            edge brain.replace_battery goto battery_full;

        location battery_high: marked;
            edge brain.charge when battery_charging.is_charging goto battery_full;
            edge brain.discharge when guard_discharge goto battery_low;
            edge brain.replace_battery goto battery_full;

        location battery_full: initial; marked;
            edge brain.discharge when guard_discharge goto battery_high;
            edge brain.replace_battery goto battery_full;
    end
end

