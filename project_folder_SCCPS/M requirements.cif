import "Cart model/Cart brain.cif", "Cart model/sensor.cif", "Cart model/Battery.cif", "Cart model/Lifting_mechanism.cif", "Cart model/DC motor.cif";

group def M1(Cart_brain brain;  Sensor_and_cameras sensors_and_cameras):

    requirement brain.start_l needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;
    requirement brain.start_r needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;

    requirement brain.start_lifting needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;
    requirement brain.start_lowering needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;

    requirement brain.request_storage needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;
    requirement brain.request_picking needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;
    requirement brain.request_charging needs sensors_and_cameras.Location_barcode_sensor.on_top_of_barcode;

end

group def M2(Cart_brain brain; DC_motor motor; Lifting_mechanism lift):

    requirement brain.start_l needs not(lift.lifting or lift.lowering);
    requirement brain.start_r needs not(lift.lifting or lift.lowering);
    requirement brain.start_fw needs not(lift.lifting or lift.lowering);

    requirement brain.start_lifting needs motor.keep_track_of_direction.idle;
    requirement brain.start_lowering needs motor.keep_track_of_direction.idle;

end



group def M7(Cart_brain cart; Battery battery):
    requirement cart.stop_charging needs battery.b = 100;
end

