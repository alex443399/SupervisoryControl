import "Cart model/Cart brain.cif", "Cart model/DC motor.cif", "Cart model/Lifting_mechanism.cif";
import "Cart model/Cart communicator.cif";
import "Cart model/Location_barcode_sensor.cif";
// import "Product stack barcode camera.cif","Touch sensor.cif","infrared sensor.cif";
import "Cart model/sensor.cif";//,"Touch sensor.cif","infrared sensor.cif";
import "Cart model/camera.cif";//,

import "M requirements.cif", "L requirements.cif";

group def Cart_system():
    brain : Cart_brain();
    motor : DC_motor(brain);
    lift : Lifting_mechanism(brain);
    location_barcode_sensor : Location_barcode_sensor(brain);
    comm : request_handler(brain);
    sensor : Sensor(brain);
    camera: Camera(brain);


    bat: Battery(brain);
    order_req: order_of_requests(brain, bat);

    m1 : M1(brain, location_barcode_sensor);
    m2 : M2(brain);
    m6 : M6(brain, bat);
    m7 : M7(brain, bat);
    l4 : L4(brain);

end

Cart1 : Cart_system();
Cart2 : Cart_system();


//     controllable request_storage, request_picking, request_charging;
//     uncontrollable granted_storage, granted_picking, granted_charging;
//     uncontrollable denied_storage, denied_picking, denied_charging;

plant resource_allocator:
    controllable process;
    disc int[0..2] q = 0;

    location idle:initial;marked;
        edge Cart1.brain.request_storage, Cart1.brain.request_picking, Cart1.brain.request_charging
            do q := q + 1 goto choosing_from_Q;
        edge Cart2.brain.request_storage, Cart2.brain.request_picking, Cart2.brain.request_charging
            do q := q + 1 goto choosing_from_Q;
    location choosing_from_Q:
        edge process goto processing_request;

        edge Cart1.brain.request_storage, Cart1.brain.request_picking, Cart1.brain.request_charging
            do q := q + 1;
        edge Cart2.brain.request_storage, Cart2.brain.request_picking, Cart2.brain.request_charging
            do q := q + 1;
    location processing_request:
        edge Cart1.brain.granted_storage, Cart1.brain.granted_picking, Cart1.brain.granted_charging,
            Cart1.brain.denied_storage, Cart1.brain.denied_picking, Cart1.brain.denied_charging
            when q>1 do q:=q-1 goto choosing_from_Q;
        edge Cart1.brain.granted_storage, Cart1.brain.granted_picking, Cart1.brain.granted_charging,
            Cart1.brain.denied_storage, Cart1.brain.denied_picking, Cart1.brain.denied_charging
            when q = 1 do q:=0 goto idle;
        edge Cart2.brain.granted_storage, Cart2.brain.granted_picking, Cart2.brain.granted_charging,
            Cart2.brain.denied_storage, Cart2.brain.denied_picking, Cart2.brain.denied_charging
            when q>1 do q:=q-1 goto choosing_from_Q;
        edge Cart2.brain.granted_storage, Cart2.brain.granted_picking, Cart2.brain.granted_charging,
            Cart2.brain.denied_storage, Cart2.brain.denied_picking, Cart2.brain.denied_charging
            when q = 1 do q:=0 goto idle;

        edge Cart1.brain.request_storage, Cart1.brain.request_picking, Cart1.brain.request_charging
            do q := q + 1;
        edge Cart2.brain.request_storage, Cart2.brain.request_picking, Cart2.brain.request_charging
            do q := q + 1;
end
